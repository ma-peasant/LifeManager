<HeaderedContentControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:lifeManager="clr-namespace:LifeManager.Infrastructure"
		     xmlns:vm="using:LifeManager.ViewModels"
			 xmlns:table="clr-namespace:LifeManager.Tables;assembly=LifeManager"
			 Theme="{StaticResource demopage}"
			 x:DataType="vm:NotesViewModel"
             x:Class="LifeManager.Notes">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:NotesViewModel />
	</Design.DataContext>

	<!--<HeaderedContentControl.Styles>
		<Style Selector="TextBox#tb_title:disabled">
			<Setter Property="Background" Value="Red" />
		</Style>
	</HeaderedContentControl.Styles>-->

	<!-- We give a name to the root grid in order to access it later -->
	<Grid ColumnDefinitions="100,*" RowDefinitions="50, *"
          x:Name="Root">
		<ListBox x:Name="Lb_Notes" Grid.Row="0" Grid.RowSpan="2"  Grid.Column="0"
				 SelectionChanged="ListBox_SelectionChanged"
				 ItemsSource="{Binding NoteTitles}">
			<ListBox.Styles>
				<Style Selector="TextBox.class1">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="BorderBrush" Value="Black"/>
					<Setter Property="Foreground" Value="Black"/>
					<Setter Property="CornerRadius" Value="0" />
				</Style>
				<Style Selector="ListBoxItem">
					<Setter Property="Height" Value="30" />
					<Setter Property="Template">
						<ControlTemplate>
							<StackPanel Orientation="Vertical" Margin="0,0,0,0" VerticalAlignment="Bottom">
								<ContentPresenter
									Content="{TemplateBinding Content}" 
									ContentTemplate="{TemplateBinding ContentTemplate}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								<Border
									Height="1"
									Width="{TemplateBinding Width}"
									Background="Gray"
									IsVisible="True"
									 Margin="0">
								</Border>
							</StackPanel>
						</ControlTemplate>
					</Setter>
				</Style>

				<Style Selector="ListBoxItem:selected TextBox.class1">
					<Setter Property="Foreground"  Value="Black" />
					<Setter Property="FontSize"  Value="16" />
					<Setter Property="FontWeight"  Value="Bold" />
				</Style>
			</ListBox.Styles>
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Border Height="18" DoubleTapped="Border_DoubleTapped" BorderThickness="0" Background="Transparent" BorderBrush="Black" >
						<TextBox Text="{Binding Title}" Classes="class1"  LostFocus="TextBox_LostFocus_1" KeyDown="TextBox_KeyDown"  Focusable="{Binding IsEnabled}" IsHitTestVisible="{Binding IsEnabled}"/>
					</Border>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<StackPanel Orientation="Vertical" Margin="5" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2">
			<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
				<Button Content="新建" Command="{Binding #Root.((vm:NotesViewModel)DataContext).NewFile}" />
				<Button Content="保存" Command="{Binding SaveContent}" />
			</StackPanel>

			<!-- This TextBox can be used to add new ToDoItems -->
			<TextBox Grid.Row="2" Grid.Column="1"
					 Height="320"
					 x:DataType="vm:NotesViewModel"
					 Text="{Binding Content}"
					 Watermark="Input Notes">
				<!-- KeyBindings allow us to define KeyGestures  -->
				<TextBox.KeyBindings>
					<KeyBinding Gesture="Ctrl+S" Command="{Binding SaveContent}" />
				</TextBox.KeyBindings>
			</TextBox>
		</StackPanel>
	</Grid>
</HeaderedContentControl>